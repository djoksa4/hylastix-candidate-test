name: Deploy Infrastructure

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform-deploy-infra:
    name: Terraform Deploy Infra
    runs-on: ubuntu-latest
    environment: prod
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_USE_OIDC: true

      TF_VAR_project_name: "hylastix-candidate-test"
      TF_VAR_region: "westeurope"
      TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_address_space: '["10.0.0.0/20"]'
      TF_VAR_subnets: '[{"name":"private-runner-subnet","address_prefix":"10.0.0.0/24"},{"name":"private-app-subnet","address_prefix":"10.0.1.0/24"},{"name":"appgw-subnet","address_prefix":"10.0.2.0/24"}]'

      TF_VAR_runner_vm_size: Standard_B2s
      TF_VAR_runner_vm_admin_username: ${{ secrets.RUNNER_VM_ADMIN_USERNAME }}
      TF_VAR_runner_vm_ssh_public_key: ${{ secrets.RUNNER_SSH_PUBLIC_KEY }}
      TF_VAR_runner_github_url: https://github.com/${{ github.repository }}
      TF_VAR_app_vm_size: Standard_B2s
      TF_VAR_app_vm_admin_username: ${{ secrets.APP_VM_ADMIN_USERNAME }}
      TF_VAR_app_vm_ssh_public_key: ${{ secrets.APP_SSH_PUBLIC_KEY }}

    defaults:
      run:
        working-directory: infra/terraform

    outputs:
      app_vm_private_ip: ${{ steps.tf-outputs.outputs.app_vm_private_ip }}
      appgw_public_ip: ${{ steps.tf-outputs.outputs.appgw_public_ip }}

    steps:
      - name: Checkout code 
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ vars.TERRAFORM_VERSION }}

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get GitHub self-hosted runner token
        id: get-runner-token
        run: |
          TOKEN_JSON=$(curl -s -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_ADMIN_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/runners/registration-token)
          
          REG_TOKEN=$(echo "$TOKEN_JSON" | jq -r '.token')
          echo "runner_token=$REG_TOKEN" >> $GITHUB_OUTPUT

      - name: Initialize and Plan Terraform
        env:
          TF_VAR_runner_registration_token: ${{ steps.get-runner-token.outputs.runner_token }}
        run: |
          terraform init -input=false
          terraform plan -input=false

      - name: Apply Terraform
        env:
          TF_VAR_runner_registration_token: ${{ steps.get-runner-token.outputs.runner_token }}
        run: terraform apply -auto-approve

      - name: Export Terraform Outputs
        id: tf-outputs
        run: |
          echo "app_vm_private_ip=$(terraform output -raw app_vm_private_ip)" >> $GITHUB_OUTPUT
          echo "appgw_public_ip=$(terraform output -raw appgw_public_ip)" >> $GITHUB_OUTPUT

  next-job:
    runs-on: [self-hosted, Linux, X64]
    needs: terraform-deploy-infra
    steps:
      - name: Print previous job outputs and test SSH
        run: |
          echo "App VM IP: ${{ needs.terraform-deploy-infra.outputs.app_vm_private_ip }}"
          echo "AppGW IP: ${{ needs.terraform-deploy-infra.outputs.appgw_public_ip }}"

          echo "${{ secrets.APP_VM_PRIVATE_KEY }}" > /tmp/app_vm_key
          chmod 600 /tmp/app_vm_key
          ssh -o StrictHostKeyChecking=no -i /tmp/app_vm_key ${{ secrets.APP_VM_ADMIN_USERNAME }}@${{ needs.terraform-deploy-infra.outputs.app_vm_private_ip }} "hostname && uptime"