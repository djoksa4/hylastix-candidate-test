---
- name: Deploy Keycloak, Postgres, and Webserver
  hosts: all
  become: true

  vars:
    web_content_dir_host: /var/www/html
    nginx_config_dir_host: /etc/nginx/conf.d

  tasks:
    - name: Ensure web content directory exists
      file:
        path: "{{ web_content_dir_host }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Copy static web content to host
      copy:
        src: "{{ web_content_dir_local }}"
        dest: "{{ web_content_dir_host }}"
        owner: root
        group: root
        mode: '0644'
        directory_mode: '0755'

    - name: Ensure Nginx config directory exists
      file:
        path: "{{ nginx_config_dir_host }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    # - name: Copy Nginx config files to host
    #   copy:
    #     src: "{{ nginx_config_dir_local }}"
    #     dest: "{{ nginx_config_dir_host }}/"
    #     owner: root
    #     group: root
    #     mode: '0644'
    #     directory_mode: '0755'

    # - name: Deploy Postgres container
    #   community.docker.docker_container:
    #     name: postgres
    #     image: "{{ postgres_image }}"
    #     state: started
    #     restart_policy: always
    #     env:
    #       POSTGRES_DB: "{{ postgres_db_name }}"
    #       POSTGRES_USER: "{{ postgres_user }}"
    #       POSTGRES_PASSWORD: "{{ postgres_password }}"

    # - name: Deploy Keycloak container
    #   community.docker.docker_container:
    #     name: keycloak
    #     image: "{{ keycloak_image }}"
    #     state: started
    #     restart_policy: always
    #     env:
    #       KEYCLOAK_ADMIN: "{{ keycloak_admin_user }}"
    #       KEYCLOAK_ADMIN_PASSWORD: "{{ keycloak_admin_password }}"
    #       KC_DB: postgres
    #       KC_DB_URL_HOST: postgres
    #       KC_DB_URL_DATABASE: "{{ postgres_db_name }}"
    #       KC_DB_USERNAME: "{{ postgres_user }}"
    #       KC_DB_PASSWORD: "{{ postgres_password }}"
    #     depends_on:
    #       - postgres

    - name: Deploy Webserver container
      community.docker.docker_container:
        name: nginx
        image: "{{ web_image }}"
        state: started
        restart_policy: always
        published_ports:
          - "{{ web_port }}:80"
        volumes:
          - "{{ web_content_dir_host }}:/usr/share/nginx/html:ro"
          - "{{ nginx_config_dir_host }}:/etc/nginx/conf.d:ro"
